CREATE TABLE USERS (
    USER_ID      INTEGER      PRIMARY KEY AUTOINCREMENT
                              NOT NULL
                              UNIQUE,
    LOGIN        VARCHAR (15) NOT NULL
                              UNIQUE,
    PASSWORD     VARCHAR (20) NOT NULL,
    EMAIL        VARCHAR (40) NOT NULL
                              UNIQUE,
    DATE_CREATED DATE         NOT NULL
);


CREATE TABLE HISTORICAL_DATA (
    CRYPTO_SYMBOL VARCHAR (10) NOT NULL,
    DATE          DATE         NOT NULL,
    HIGH          DOUBLE       NOT NULL,
    LOW           DOUBLE       NOT NULL,
    CLOSE         DOUBLE       NOT NULL,
    VOLUME        DOUBLE       NOT NULL
);

CREATE TABLE ACTUAL_DATA (
    CRYPTO_SYMBOL        UNIQUE
                         NOT NULL,
    PRICE         DOUBLE NOT NULL,
    VOLUME_24H    DOUBLE NOT NULL,
    MARKET_CAP    DOUBLE NOT NULL
);
CREATE TABLE CRYPTO_DICT (
    CRYPT_SYMBOL VARCHAR (10) NOT NULL
                              UNIQUE,
    NAME         VARCHAR (40) UNIQUE
                              NOT NULL,
    TAG_MINING   VARCHAR (15) NOT NULL,
    SUPPLY       DOUBLE       NOT NULL,
    MAX_SUPPLY   DOUBLE       NOT NULL
);

CREATE TABLE TRANSACTIONS (
    TRANS_ID      INTEGER      PRIMARY KEY
                               AUTOINCREMENT,
    USER_ID       INTEGER      NOT NULL,
    DATE          DATE         NOT NULL,
    CRYPTO_SYMBOL VARCHAR (15) NOT NULL,
    PRICE         DOUBLE       NOT NULL,
    AMOUNT        DOUBLE       NOT NULL,
    QUANTITY      DOUBLE       NOT NULL
);

CREATE TABLE WALLETS (
    USER_ID       INTEGER NOT NULL,
    CRYPTO_SYMBOL INTEGER NOT NULL,
    QUANTITY      DOUBLE  NOT NULL,
    VALUE         DOUBLE  NOT NULL
);

select strftime('%Y-%m-%d', y.date) as date, y.value from 
(select x.w_date as date, x.wallet_value as value, rank () OVER ( PARTITION BY  strftime('%Y-%m-%d', x.w_date) ORDER BY x.w_date desc) as rank  
from 
(select  w.createddate as w_date , sum(w.value) as wallet_value
from wallets w 
left join users u on u.user_id = w.user_id
 where u.user_id = 37
 group by  w.createddate
 order by 1 desc) x ) y
 where y.rank = 1;
 
 
CREATE TRIGGER insert_createdDate AFTER INSERT ON USERS
BEGIN
    UPDATE USERS SET DATE_CREATED = DATETIME() WHERE ID = last_insert_rowid();
END;

INSERT INTO CryptoDB.USERS (ID, USERNAME, PASSWORD, EMAIL)
VALUES (NULL,"Jaro69","Crypto69", "lolo@wp.pl")



